name: Azure Automation Upload and Compile
on:
  workflow_dispatch:
  ## events used later for logic that selets to deploy to QA, Prod targets
  release:
    types: [published]
  ## events used later for logic that selets to deploy to PoC, Dev destinations
  push:
    branches-ignore:
      - 'NoTrigger**'

permissions:
  id-token: write
  contents: write

defaults:
  run:
    shell: pwsh

jobs:
  DoTheDo:
    name: Checkout the Repo
    ## dynamically determine which GitHub Deployment Environment to use for this entire job
    environment:
      name: ${{ github.event_name == 'release' && ( github.release.draft == true && 'QA' || 'Prod' ) || (github.ref_name == 'main' && 'Dev' || 'poc') }}

    runs-on: ubuntu-latest

    steps:
      - name: Check it out!
        uses: actions/checkout@v4

      - name: do the do!
        run: |
          Write-Verbose '${{ toJson(github) }}' -verbose

      - name: Connect to Azure for the AZ subscription specified by secrets/vars for _this_ GitHub Deployment Environment
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Upload and Compile Changed DSC Code
        uses: azure/powershell@v2
        with:
          azPSVersion: "latest"
          inlineScript: |
           ## Get the Current Configurations Files from Azure
           #New-Item -Type Directory -Name "Temp"
           #$outputFolder = (Join-Path -Path ${env:GITHUB_WORKSPACE} -Childpath "Temp")
           #Get-azautomationdscconfiguration -ResourceGroupName '${{ vars.RESOURCE_GROUP_NAME }}' -AutomationAccountName '${{ vars.AUTOMATION_ACCOUNT_NAME }}'  | Foreach-Object{
            #Export-AzAutomationDscConfiguration -ResourceGroupName '${{ vars.RESOURCE_GROUP_NAME }}' -AutomationAccountName '${{ vars.AUTOMATION_ACCOUNT_NAME }}'  -Name $_.Name -OutputFolder $outputFolder }}
          
           # Manually upload and compile the code for testing/showing it off
           $updatedFile = "DSC/MVPre.ps1"
           $updatedFilePath = (Join-Path -Path $env:GITHUB_WORKSPACE -ChildPath $updatedFile)
           $UpdatedConfigName = ($updatedFile.Split("/")[-1].replace(".ps1",""))
           Import-AzAutomationDscConfiguration -AutomationAccountName '${{ vars.AUTOMATION_ACCOUNT_NAME }}' -Published -ResourceGroupName '${{ vars.RESOURCE_GROUP_NAME }}' -SourcePath $updatedFilePath -Force
           Start-AzAutomationDscCompilationJob -ConfigurationName $UpdatedConfigName -ResourceGroupName '${{ vars.RESOURCE_GROUP_NAME }}' -AutomationAccountName '${{ vars.AUTOMATION_ACCOUNT_NAME }}'