name: Azure Automation Upload and Compile
on:
  workflow_dispatch:
  ## events used later for logic that selets to deploy to QA, Prod targets
  release:
    types: [prereleased, released]
  ## events used later for logic that selets to deploy to PoC, Dev destinations
  push:
    branches-ignore:
      - 'NoTrigger**'
    paths:
      - 'DSC/MVPreRing0.ps1'
      - 'DSC/MVPreRing1.ps1'
      - 'DSC/MVPre.ps1'
      - 'MVPreTesting.ps1'

permissions:
  id-token: write
  contents: write

defaults:
  run:
    shell: pwsh

jobs:
  DoTheDo:
    name: Checkout the Repo
    ## dynamically determine which GitHub Deployment Environment to use for this entire job
    environment:
      name: ${{ github.event_name == 'release' && ( github.event.release.prerelease == true && 'QA' || 'Prod' ) || (github.ref_name == 'main' && 'Dev' || 'poc') }}

    runs-on: ubuntu-latest

    steps:
      - name: Check it out!
        uses: actions/checkout@v4

      - name: Connect to Azure for the AZ subscription specified by secrets/vars for _this_ GitHub Deployment Environment
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: true

      - name: Upload and Compile Changed DSC Code
        uses: azure/powershell@v2
        with:
          azPSVersion: "latest"
          inlineScript: |
           #Export out all MVP* DSC Configurations and rename them to remove the leading \ character that stupid Microsoft adds
           New-Item -Type Directory -Name "temp" -Path $env:GITHUB_WORKSPACE
           $tempDSCFilePath = Join-Path -Path $env:GITHUB_WORKSPACE -ChildPath ("temp" + [IO.Path]::DirectorySeparatorChar)
           $repoDSCFileLocation = Join-Path -Path $env:GITHUB_WORKSPACE -ChildPath ("DSC" + [IO.Path]::DirectorySeparatorChar + "MVP*.ps1")

           get-azautomationdscconfiguration -ResourceGroupName '${{ vars.RESOURCE_GROUP_NAME }}'  -AutomationAccountName '${{ vars.AUTOMATION_ACCOUNT_NAME }}' | Where-Object{$_.name -like "MVP*"} | ForEach-Object{export-AzAutomationDscConfiguration -ResourceGroupName '${{ vars.RESOURCE_GROUP_NAME }}'  -AutomationAccountName '${{ vars.AUTOMATION_ACCOUNT_NAME }}' -Name $_.Name -OutputFolder $tempDSCFilePath -Force}

           Get-ChildItem -path $tempDSCFilePath -File | Select-Object -expand FullName | ForEach-Object{mv $_ ($_.Replace("\",""))}

           $deployedFiles = Get-ChildItem -path $tempDSCFilePath | select-object -Property Name,FullName,DirectoryName,@{n="FileHash";e={Get-Filehash $_ | Select-Object -expand Hash}}
           $repobasedFiles = Get-ChildItem -path $repoDSCFileLocation | select-object -Property Name,FullName,DirectoryName,@{n="FileHash";e={Get-Filehash $_ | Select-Object -expand Hash}}

           Compare-Object -ReferenceObject $repobasedFiles -DifferenceObject $DeployedFiles -Property FileHash,Name | Where-Object{$_.SideIndicator -eq "<="} | ForEach-Object{
            $updatedFile = Join-Path -Path "DSC" -ChildPath $_.Name
            $updatedFilePath = (Join-Path -Path $env:GITHUB_WORKSPACE -ChildPath $updatedFile)
            $UpdatedConfigName = ($updatedFile.Split("/")[-1].replace(".ps1",""))
            Import-AzAutomationDscConfiguration -AutomationAccountName '${{ vars.AUTOMATION_ACCOUNT_NAME }}' -Published -ResourceGroupName '${{ vars.RESOURCE_GROUP_NAME }}' -SourcePath $updatedFilePath -Force
            Start-AzAutomationDscCompilationJob -ConfigurationName $UpdatedConfigName -ResourceGroupName '${{ vars.RESOURCE_GROUP_NAME }}' -AutomationAccountName '${{ vars.AUTOMATION_ACCOUNT_NAME }}'
           }